version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic:/etc/traefik/dynamic
      - ./traefik/acme.json:/etc/traefik/acme.json
    depends_on:
      - postgres
      - backend
      - frontend
      - email-service
      - telegram-service
    networks:
      - crm-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.crm-synergy.ru`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  postgres:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./crm-system
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    # healthcheck:
    #   test: ["CMD-SHELL", "ps aux | grep java || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.crm-synergy.ru`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  frontend:
    build: ./crm-system/frontend
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`app.crm-synergy.ru`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  email-service:
    build: ./crm-system/email-service
    env_file:
      - .env
    networks:
      - crm-network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.email-service.rule=Host(`email.crm-synergy.ru`)"
      - "traefik.http.routers.email-service.entrypoints=websecure"
      - "traefik.http.routers.email-service.tls.certresolver=letsencrypt"
      - "traefik.http.services.email-service.loadbalancer.server.port=8081"

  telegram-service:
    build: ./crm-system/telegram-service
    env_file:
      - .env
    networks:
      - crm-network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.telegram-service.rule=Host(`telegram.crm-synergy.ru`)"
      - "traefik.http.routers.telegram-service.entrypoints=websecure"
      - "traefik.http.routers.telegram-service.tls.certresolver=letsencrypt"
      - "traefik.http.services.telegram-service.loadbalancer.server.port=8082"

networks:
  crm-network:
    driver: bridge

volumes:
  postgres_data: