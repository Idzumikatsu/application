http:
  routers:
    traefik:
      rule: "Host(`traefik.crm-synergy.ru`)"
      entryPoints:
        - websecure
      service: traefik
      tls:
        certResolver: letsencrypt

    traefik-http:
      rule: "Host(`traefik.crm-synergy.ru`)"
      entryPoints:
        - web
      service: traefik
      middlewares:
        - redirect-https

    backend-api:
      rule: "Host(`app.crm-synergy.ru`) && PathPrefix(`/api`)"
      entryPoints:
        - websecure
      service: backend
      tls:
        certResolver: letsencrypt
      priority: 10

    backend-api-http:
      rule: "Host(`app.crm-synergy.ru`) && PathPrefix(`/api`)"
      entryPoints:
        - web
      service: backend
      middlewares:
        - redirect-https
      priority: 10

    backend:
      rule: "Host(`api.crm-synergy.ru`)"
      entryPoints:
        - websecure
      service: backend
      tls:
        certResolver: letsencrypt

    backend-http:
      rule: "Host(`api.crm-synergy.ru`)"
      entryPoints:
        - web
      service: backend
      middlewares:
        - redirect-https

    frontend:
      rule: "Host(`app.crm-synergy.ru`) && !PathPrefix(`/api`)"
      entryPoints:
        - websecure
      service: frontend
      tls:
        certResolver: letsencrypt
      priority: 15

    frontend-http:
      rule: "Host(`app.crm-synergy.ru`) && !PathPrefix(`/api`)"
      entryPoints:
        - web
      service: frontend
      middlewares:
        - frontend-spa
        - redirect-https
      priority: 15

    email-service:
      rule: "Host(`email.crm-synergy.ru`)"
      entryPoints:
        - websecure
      service: email-service
      tls:
        certResolver: letsencrypt

    email-service-http:
      rule: "Host(`email.crm-synergy.ru`)"
      entryPoints:
        - web
      service: email-service
      middlewares:
        - redirect-https

    telegram-service:
      rule: "Host(`telegram.crm-synergy.ru`)"
      entryPoints:
        - websecure
      service: telegram-service
      tls:
        certResolver: letsencrypt

    telegram-service-http:
      rule: "Host(`telegram.crm-synergy.ru`)"
      entryPoints:
        - web
      service: telegram-service
      middlewares:
        - redirect-https

    prometheus:
      rule: "Host(`prometheus.crm-synergy.ru`)"
      entryPoints:
        - web
      service: prometheus
      # Temporarily disabled HTTPS due to rate limits

    grafana:
      rule: "Host(`grafana.crm-synergy.ru`)"
      entryPoints:
        - web
      service: grafana
      # Temporarily disabled HTTPS due to rate limits

    loki:
      rule: "Host(`loki.crm-synergy.ru`)"
      entryPoints:
        - web
      service: loki
      # Temporarily disabled HTTPS due to rate limits

  middlewares:
    redirect-https:
      redirectScheme:
        scheme: https
        permanent: true

    frontend-spa:
      redirectRegex:
        regex: "^https?://(.*)/[^/]+$"
        replacement: "https://$1/"
        permanent: false

  services:
    traefik:
      loadBalancer:
        servers:
          - url: "http://traefik:8080"

    backend:
      loadBalancer:
        servers:
          - url: "http://backend:8084"

    frontend:
      loadBalancer:
        servers:
          - url: "http://frontend:80"

    email-service:
      loadBalancer:
        servers:
          - url: "http://email-service:8081"

    telegram-service:
      loadBalancer:
        servers:
          - url: "http://telegram-service:8082"

    prometheus:
      loadBalancer:
        servers:
          - url: "http://prometheus:9090"

    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"

    loki:
      loadBalancer:
        servers:
          - url: "http://loki:3100"

# Removed strip prefix middleware to keep `/api` segment for backend routes
# End of file