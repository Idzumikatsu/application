name: CRM System CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  JAVA_VERSION: '11'
  NODE_VERSION: '16'

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Build and test backend
      run: |
        cd crm-system
        mvn clean test -Dspring.profiles.active=test

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: backend-test-results
        path: crm-system/target/surefire-reports/

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: backend-coverage-report
        path: crm-system/target/site/jacoco/

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: crm-system/frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd crm-system/frontend
        npm ci

    - name: Run unit tests
      run: |
        cd crm-system/frontend
        npm test -- --coverage --watchAll=false

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: frontend-test-results
        path: crm-system/frontend/coverage/

    - name: Build frontend
      run: |
        cd crm-system/frontend
        npm run build

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: crm-system/frontend/package-lock.json

    - name: Install Playwright browsers
      run: |
        cd crm-system/frontend
        npx playwright install --with-deps

    - name: Start backend server
      run: |
        cd crm-system
        mvn spring-boot:run -Dspring.profiles.active=test &
        sleep 30

    - name: Start frontend server
      run: |
        cd crm-system/frontend
        npm start &
        sleep 30

    - name: Run E2E tests
      run: |
        cd crm-system/frontend
        npx playwright test

    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results
        path: crm-system/frontend/playwright-report/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Run OWASP Dependency Check
      run: |
        cd crm-system
        mvn org.owasp:dependency-check-maven:check -DskipTests

  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, e2e-tests, security-scan]
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: crm-system/frontend/package-lock.json

    - name: Build backend JAR
      run: |
        cd crm-system
        ./mvnw clean package -DskipTests
        cp target/*.jar ../crm-system.jar

    - name: Build frontend
      run: |
        cd crm-system/frontend
        npm ci --only=production
        npm run build

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deployment-artifacts
        path: |
          crm-system.jar
          crm-system/frontend/build/
          scripts/
        retention-days: 7